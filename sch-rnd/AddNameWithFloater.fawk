function isNum(a) {
	if (a == "0") return 1;
	if (a == "1") return 1;
	if (a == "2") return 1;
	if (a == "3") return 1;
	if (a == "4") return 1;
	if (a == "5") return 1;
	if (a == "6") return 1;
	if (a == "7") return 1;
	if (a == "8") return 1;
	if (a == "9") return 1;
	return 0;
}

function getPrefix(str,
	_pos) {
	
	_pos = length(str);

	while (_pos > 0) {
		if (isNum(substr(str, _pos, 1)) == 0) {
			return substr(str, 1, _pos);
		}
		_pos--;
	}

	return "";
}

function getLastNumbers(str,
	_pos) {
	
	_pos = length(str);

	while (_pos > 0) {
		if (isNum(substr(str, _pos, 1)) == 0) {
			return substr(str, _pos + 1);
		}
		_pos--;
	}

	return "";
}

function addnamewithfloater(
	_found, _par, _oid, _text, _x, _y, _scope, _to, _nums, _prefix, _oldname
	) {

	_found = searchobjat("crosshair", "Select a net");
	while ((_found != "") && (propget("object:" @ idp("print", _found), "a/role") != "wire-net")) {
		_par = getparentgrp(_found);
		idp("free", _found);
		_found = _par;
	}
	if (_found == "") return;
	_oid = idp("print", _found);

	_oldname = propget("object:" @ _oid, "a/name");

	if (_oldname == "") {
		if (_storedName != "") {
			_prefix = getPrefix(_storedName);
			_nums = getLastNumbers(_storedName);
			if (_nums != "") {
				_nums++;
				_oldname = _prefix @ _nums;
			} else {
				_oldname = "";
			}
		}
	}
	
	_to = promptfor("New net name", _oldname);
	if (_to == "") return;

	_storedName = _to;

	propset("object:" @ _oid, "a/name", _to);

	_x = schgetxy("crosshair", "Select location", "X");
	_y = schgetxy("crosshair", "Select location", "Y");

	_scope = "object:" @ _oid;
	_text = drawtext("retptr", _scope, _x, _y, "%../a.name%", "wire");
	propset("objbin", _text, "p/text/dyntext", 1);
	propset("objbin", _text, "p/floater", 1);
	idp("free", _found);
}

function main() {
	_storedName = "";
	fgw_func_reg(addnamewithfloater);

	cookie = scriptcookie();
	createmenu("/main_menu/Automation/Networks/Add Name With Floater", "addnamewithfloater()", "Add or change a network name and add a floater automatically", cookie, "<key>a;<key>x;<key>n");
}
